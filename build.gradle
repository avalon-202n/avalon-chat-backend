plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'checkstyle'
    id 'org.ec4j.editorconfig' version '0.0.3'
    id 'com.google.cloud.tools.jib' version '3.3.1'
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

group = 'com.avalon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
    implementation 'org.springdoc:springdoc-openapi-security:1.7.0'
    implementation('it.ozimov:embedded-redis:0.7.3') { exclude group: "org.slf4j", module: "slf4j-simple" }

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5', 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'net.nurigo:sdk:4.2.7'
}

tasks.named('test') {
    useJUnitPlatform()
}

task copyPrivate(type: Copy) {
    def result = copy {
        from './avalon-chat-sub'
        into './src/main/resources'
    }
    println("copyPrivate-didWork: " + result.didWork)
}

processResources {
    dependsOn copyPrivate
}

task checkstyle {
    dependsOn tasks.withType(Checkstyle)
    dependsOn editorconfigCheck
}

checkstyle {
    maxWarnings = 0
    toolVersion = "10.2"
}

editorconfig {
    excludes = ["${buildDir}"]
}

check.dependsOn editorconfigCheck

jib {
    from {
        image = "openjdk:11-slim"
    }
    to {
        image = "$System.env.IMAGE_NAME"
    }
    container {
        jvmFlags = [
            "-Dspring.profiles.active=" + "$System.env.PROFILE"
        ]
    }
}
